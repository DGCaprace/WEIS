# Generic modeling options file to run standard WISDEM case
General:
    verbosity: False  # When set to True, the code prints to screen many infos
    goodman_correction: True
    
WISDEM:
    RotorSE:
        flag: True
        spar_cap_ss: DP13_DP10_uniax
        spar_cap_ps: DP07_DP04_uniax
        te_ss: DP17_DP15 #putting a web here  does not work because of region_stacking
        n_span: &nspan 30  #or 40 to force to be equal to what I give in the yaml - but it REINTERPOLATES anyway (see assign_outer_shape_bem_values)
        exportRawPrecompFile: precomp_raw_inputs.yaml
        exportMaxCoordsFile: precomp_max_coords.yaml
    DriveSE:
        flag: False #apparently can't run this without tower... crashes in frame3dd
    TowerSE:             # Options of TowerSE module
        flag: False
        # #need this even though the flag is false, otherwise crash:
        # gamma_freq:  1.  #has no default in scheme
    Hub: #that is, nacelle??
        flag: True # Important for us to NOT turb the nacelle
    BOS:
        flag: False


Level3: 
    flag: True

    ROSCO:
        flag: True #This must be true: retune of rosco every time. This is done by using Cp-Ct-Cq generated with Wisdem

    #hard setting of parameters:
    simulation:
        DT: 0.01
        # DT_Out: 0.01
        NumCrctn: 0 #number of iteration aero-struct
        # CompElast: 1
        # CompInflow: 1
        # CompAero: 2
        CompServo: 1 #can't turn this off otherwise AEP is not computed because GenPwr is not present
        # CompHydro: 0
        # CompSub: 0
        # CompMooring: 0
        # CompIce: 0
        #
        # EDFile:
        # BDBldFile(1):
        # BDBldFile(2):
        # BDBldFile(3):
        # InflowFile:
        # AeroFile:
        OutFileFmt: 4 #2: binary, 4: binary uncompressed
        # Twr_Kdmp:   #damping
        # Bld_Kdmp:   #damping
    # InflowWind:
    #     RefHt:  #not sure this chanes anything
    AeroDyn:
        WakeMod: 1 #1 is BEMT, 2 is DBEMT   !!!
        AFAeroMod: 1  #1 = no DS
        TwrPotent: 0 #1 = potential flow
        TwrShadow: 0 #1 = default
        TwrAero: False
        SkewMod: 2 #2=Pitt/Peters
        # UAMod: 3
    ElastoDyn:
        BldNodes: *nspan  #force this to be equal to the number of nodes for aero. #theoretically there are not gonna be exactly at the same locations because ED start at r/R=1/nspan/2 whereas AD starts at r/R=0.
        FlapDOF1: True
        FlapDOF2: True
        EdgeDOF:  True
        # TeetDOF: False
        DrTrDOF: False 
        GenDOF: True #leave it on since we do have ROSCO
        YawDOF: False  
        TwFADOF1 : False
        TwFADOF2 : False
        TwSSDOF1 : False
        TwSSDOF2 : False
        PtfmSgDOF: False
        PtfmSwDOF: False
        PtfmHvDOF: False
        PtfmRDOF : False
        PtfmPDOF : False
        PtfmYDOF : False
        #
        #What follows is just a matter of where things are measures
        # ShftGagL :  
        # NcIMUxn  :
        # NcIMUyn  :
        # NcIMUzn  :
    ServoDyn:
        YawSpr: 1.0E+10 
        YawDamp: 1.0E+06

# All options for OpenFAST
openfast:
    analysis_settings:
        Analysis_Level: 2
                # 2:  Run FAST with ElastoDyn # 1:  #write inputs
        debug_level: 2
        mpi_run: False

    clean_FAST_directory: False

    file_management:
        # FAST_InputFile: DTU10MW #name of my fast case
        FAST_namingOut: DTU10MW #prefix for autogenerated fast input files
        # FAST_directory: ??
        # FAST_InputFile: ??
        FAST_runDirectory: openfast_runs #folder where fast model is stored and run


DLC_driver:
    DLCs:
        - DLC:   '1.2' #CAREFUL, USE 1.2 OTHERWISE AEP GET COMPUTED THROUGH THE DLC 1.1
          wind_speed:     [5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.] #make sure OutFileFmt = 2 when running with this
          n_seeds: 6 #or specify the seed manually. 
          probabilities: [1,] #must be specified for DLC1.2, but we don't use it (we recompute it anyway). Should here be a size-1 table with a single value.
          analysis_time: 600
          transient_time: 50 #Tsim = transient_time + analysis_time.
        - DLC:   '1.3' 
          wind_speed:     [5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.]
          n_seeds: 6 #or specify the seed manually. 
          analysis_time: 600
          transient_time: 50 
        # - DLC:   '1.4' #doubles the number of vels because it does 1p and 1n (direction)
        #   wind_speed:     [ 10., 12., 14.]  #or comment this to auto-set the speeds (should be related to Vrated)
        #   n_seeds: 1
        # #   analysis_time: 600 # can let that be determined automatically
        # #   transient_time: 50 
        # - DLC:   '1.5' 
        #   wind_speed:     [3., 5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.]
        #   n_seeds: 6 #or specify the seed manually. 
        # #   analysis_time: 600 # can let that be determined automatically
        # #   transient_time: 50 

        # - DLC:   '5.1'
        #   wind_speed:     [10., 14., 25.]
        #   n_seeds: 6 #or specify the seed manually. 
        # #   analysis_time: 600 # can let that be determined automatically
        # #   transient_time: 50 
        # - DLC:   '6.1'
        #   wind_speed:     [50,] #or comment this to auto-set the speeds (should be related to V_extreme50) 
        #   n_seeds: 1 #or specify the seed manually. 
        # #   analysis_time: 600 # can let that be determined automatically
        # #   transient_time: 50 
        # - DLC:   '6.3'
        #   wind_speed:     [40.] #or comment this to auto-set the speeds (should be related to V_extreme1)
        #   n_seeds: 1 #or specify the seed manually. 
        # #   analysis_time: 600 # can let that be determined automatically
        # #   transient_time: 50 

        # #-- Compute a simple power curve based on non-turbulent wind --
        # - DLC: 'PowerCurve' 
        #   wind_speed:     [ 9., 12.] 
        #   analysis_time: 30
        #   transient_time: 0 #Tsim = transient_time + analysis_time.
    fix_wind_seeds: True
            
    # 'fst_vt': all the channels per solver