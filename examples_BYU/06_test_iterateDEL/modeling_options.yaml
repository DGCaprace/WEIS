# Generic modeling options file to run standard WISDEM case
General:
    verbosity: False  # When set to True, the code prints to screen many infos
WISDEM:
    RotorSE:
        flag: True
        spar_cap_ss: Spar_cap_ss
        spar_cap_ps: Spar_cap_ps
    DriveSE:
        flag: False #apparently can't run this without tower... crashes in frame3dd
    TowerSE:             # Options of TowerSE module
        flag: False
        # #need this even though the flag is false, otherwise crash:
        # gamma_freq:  1.  #has no default in scheme
        # n_height_tower: 3 #not even defined in the scheme...??? number of control points in the height. Not needed after fix
    Hub: #that is, nacelle??
        flag: True # Important for us to NOT turb the nacelle
    BOS:
        flag: False


# Options for WEIS fidelity level 3 = nonlinear time domain = OpenFAST
# ----> WEIS fidelity level 3 = nonlinear time domain (Linearize OpenFAST) ???
ExcludeWISDEM: True

Level3: 
    flag: True

    ROSCO:
        flag: True #This must be true: retune of rosco every time. This is done by using Cp-Ct-Cq generated with Wisdem

# All options for OpenFAST
openfast:
    analysis_settings:
        Analysis_Level: 1
                # 2:  Run FAST with ElastoDyn # 1:  #write inputs
        debug_level: 2
        mpi_run: False
    # 'analysis_settings': {'Analysis_Level': 2, 'generate_af_coords': False, 'debug_level': 2, 'mpi_run': False, 'cores': 1}, 


    # fastBatch.keep_time         = True  #DG  ???   #TODO: or code my aggregation in their weighing routine directly

    clean_FAST_directory: False

    file_management:
        # FAST_InputFile: DTU10MW #name of my fast case
        FAST_namingOut: DTU10MW #prefix for autogenerated fast input files
        # FAST_directory: ??
        # FAST_InputFile: ??
        FAST_runDirectory: temp/DTU10MW #folder where fast model is stored and run
    # 'file_management': {'FAST_ver': 'OpenFAST', 'FAST_exe': 'none', 'FAST_lib': 'none', 'FAST_directory': 'none', 'FAST_InputFile': 'none', 'path2dll': '/Users/dg/Documents/BYU/devel/Python/WEIS/local/lib/libdiscon.dylib', 'Turbsim_exe': 'none', 'FAST_namingOut': 'none', 'FAST_runDirectory': 'none', 'Simulation_Settings_File': 'none'}, 
    
    


    dlc_settings:
        run_power_curve: True
        run_IEC: False
        IEC: # Currently supported: 1.1, 1.3, 1.4, 1.5, 5.1, 6.1, 6.3
            - DLC:   1.1
              U:     [3., 5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.]
              Seeds: [1]
            # - DLC:   1.3
            #   U:     [3., 5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.]
            #   Seeds: [11, 12, 13, 14, 15, 16]
            # - DLC:   1.4
            # - DLC:   1.5
            #   U:     [3., 5., 7., 9., 11., 13., 15., 17., 19., 21., 23., 25.]
            #   Seeds: [11, 12, 13, 14, 15, 16]
            # - DLC:   5.1
            #   Seeds: [11, 12, 13, 14, 15, 16]
            # - DLC:   6.1
            #   Seeds: [11, 12, 13, 14, 15, 16]
            # - DLC:   6.3
            #   Seeds: [11, 12, 13, 14, 15, 16]
        Power_Curve:
            turbulent_power_curve: False # False: Steady Wind, True: Turbulent Inflow
            U:     [5.0, 10.0] # If running turbulent power curve, can set U:[], and analysis will default to using the IEC - DLC 1.1 results.  This can be used to prevent running redundant turbulent operational cases
            Seeds: [] # Used only when turbulent_power_curve=True

# 'dlc_settings': {'run_power_curve': False, 'run_IEC': True, 'run_blade_fatigue': False, 'unique_wind_seeds': False, 'unique_wave_seeds': False, 'IEC': [{'DLC': 1.4, 'U': [10.0], 'Seeds': [0]}], 'Power_Curve': {'turbulent_power_curve': False, 'U': [3.0, 5.0, 7.0, 9.0, 11.0, 13.0, 15.0, 17.0, 19.0, 21.0, 23.0, 25.0], 'Seeds': [0]}}, 


    # 'fst_vt': all the channels per solver